definitions:
  anime.Anime:
    properties:
      cover:
        type: string
      description:
        type: string
      playlists:
        items:
          $ref: '#/definitions/anime.Playlist'
        type: array
      provider:
        $ref: '#/definitions/core.ProviderMeta'
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      year:
        type: string
    type: object
  anime.AnimeMeta:
    properties:
      cover:
        type: string
      description:
        type: string
      provider:
        $ref: '#/definitions/core.ProviderMeta'
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      year:
        type: string
    type: object
  anime.AnimeVideo:
    properties:
      provider:
        $ref: '#/definitions/core.ProviderMeta'
      title:
        type: string
      url:
        type: string
    type: object
  anime.Playlist:
    properties:
      name:
        type: string
      videos:
        items:
          $ref: '#/definitions/anime.AnimeVideo'
        type: array
    type: object
  app.AppJsonResponse:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  core.ProviderMeta:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  music.Music:
    properties:
      album:
        type: string
      artist:
        type: string
      audio:
        $ref: '#/definitions/music.MusicAudio'
      cover:
        type: string
      lyric:
        $ref: '#/definitions/music.MusicLyric'
      provider:
        $ref: '#/definitions/core.ProviderMeta'
      title:
        type: string
    type: object
  music.MusicAudio:
    properties:
      provider:
        $ref: '#/definitions/core.ProviderMeta'
      size:
        type: integer
      type:
        type: string
      url:
        type: string
      user_agent:
        type: string
    type: object
  music.MusicLyric:
    properties:
      data:
        type: string
    type: object
  music.MusicMeta:
    properties:
      album:
        type: string
      artist:
        type: string
      cover:
        type: string
      provider:
        $ref: '#/definitions/core.ProviderMeta'
      title:
        type: string
    type: object
  resp.AnimeInfo:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/anime.Anime'
      msg:
        type: string
    type: object
  resp.AnimePlayUrl:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/anime.AnimeVideo'
      msg:
        type: string
    type: object
  resp.AnimeProviderList:
    properties:
      code:
        type: integer
      data:
        items:
          type: string
        type: array
      msg:
        type: string
    type: object
  resp.AnimeSearchResult:
    properties:
      code:
        type: integer
      data:
        additionalProperties:
          items:
            $ref: '#/definitions/anime.AnimeMeta'
          type: array
        type: object
      msg:
        type: string
    type: object
  resp.LoginResp:
    properties:
      code:
        type: integer
      data:
        additionalProperties:
          type: string
        example:
          token: token1234
        type: object
      msg:
        type: string
    type: object
  resp.MusicInfo:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/music.Music'
      msg:
        type: string
    type: object
  resp.MusicPlayUrl:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/music.MusicAudio'
      msg:
        type: string
    type: object
  resp.MusicProviderList:
    properties:
      code:
        type: integer
      data:
        items:
          type: string
        type: array
      msg:
        type: string
    type: object
  resp.MusicSearchResult:
    properties:
      code:
        type: integer
      data:
        additionalProperties:
          items:
            $ref: '#/definitions/music.MusicMeta'
          type: array
        type: object
      msg:
        type: string
    type: object
  resp.PublicInfo:
    properties:
      permission:
        type: integer
      username:
        type: string
    type: object
  resp.UserPublicInfo:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/resp.PublicInfo'
      msg:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/info:
    get:
      deprecated: true
      description: 获取当前用户信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: get current user info
      tags:
      - Auth
  /api/v1/auth/login:
    get:
      deprecated: true
      description: 登录
      parameters:
      - description: username
        in: query
        name: username
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: login
      tags:
      - Auth
  /api/v1/auth/logout:
    get:
      deprecated: true
      description: 登出
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: logout
      tags:
      - Auth
  /api/v2/anime/info:
    get:
      description: 根据metadata获取动漫信息
      parameters:
      - description: anime provider meta id
        in: query
        name: mid
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.AnimeInfo'
      summary: get anime info
      tags:
      - Anime
  /api/v2/anime/playurl:
    get:
      description: 获取动漫播放地址
      parameters:
      - description: anime provider meta id
        in: query
        name: mid
        required: true
        type: string
      - description: playlist id
        in: query
        name: pid
        type: integer
      - description: episode id
        in: query
        name: eid
        type: integer
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.AnimePlayUrl'
      summary: get anime playurl
      tags:
      - Anime
  /api/v2/anime/providerlist:
    get:
      description: 获取来源列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.AnimeProviderList'
      summary: get provider list
      tags:
      - Anime
  /api/v2/anime/search:
    get:
      description: 搜索动漫
      parameters:
      - description: keyword (e.g. 刀剑神域)
        in: query
        name: keyword
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.AnimeSearchResult'
      summary: search anime
      tags:
      - Anime
  /api/v2/anime/search/{provider}:
    get:
      description: 根据来源搜索动漫
      parameters:
      - description: anime provider identifier (e.g. susudm)
        in: path
        name: provider
        required: true
        type: string
      - description: keyword (e.g. 刀剑神域)
        in: query
        name: keyword
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.AnimeSearchResult'
      summary: search anime
      tags:
      - Anime
  /api/v2/auth/info:
    get:
      description: 获取当前用户信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.UserPublicInfo'
      summary: get current user info
      tags:
      - Auth
  /api/v2/auth/login:
    get:
      description: 登录
      parameters:
      - description: username
        in: query
        name: username
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.LoginResp'
      summary: login
      tags:
      - Auth
  /api/v2/auth/logout:
    get:
      description: 登出
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: logout
      tags:
      - Auth
  /api/v2/music/info:
    get:
      description: 根据metadata获取音乐信息
      parameters:
      - description: music provider meta id
        in: query
        name: mid
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.MusicInfo'
      summary: get music info
      tags:
      - Music
  /api/v2/music/providerlist:
    get:
      description: 获取来源列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.MusicProviderList'
      summary: get provider list
      tags:
      - Music
  /api/v2/music/search:
    get:
      description: 搜索音乐
      parameters:
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.MusicSearchResult'
      summary: search music
      tags:
      - Music
  /api/v2/music/search/{provider}:
    get:
      description: 根据来源搜索音乐
      parameters:
      - description: music provider identifier (e.g. bilibilimusic)
        in: path
        name: provider
        required: true
        type: string
      - description: keyword (e.g. 霜雪千年)
        in: query
        name: keyword
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.MusicSearchResult'
      summary: search music
      tags:
      - Music
  /api/v2/music/url:
    get:
      description: 获取音乐播放地址
      parameters:
      - description: music provider meta id
        in: query
        name: mid
        required: true
        type: string
      - description: specify user agent
        in: query
        name: ua
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resp.MusicPlayUrl'
      summary: get music playurl
      tags:
      - Music
  /api/v2/novel/content:
    get:
      deprecated: true
      description: 获取小说章节内容
      parameters:
      - description: novel provider meta id
        in: query
        name: mid
        required: true
        type: string
      - description: volume id
        in: query
        name: vid
        type: integer
      - description: chapter id
        in: query
        name: cid
        type: integer
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: https://www.linovelib.com/novel/2342/133318.html
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: get novel content
      tags:
      - Novel
  /api/v2/novel/info:
    get:
      deprecated: true
      description: 获取小说简介
      parameters:
      - description: novel provider meta id
        in: query
        name: mid
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: get novel info
      tags:
      - Novel
  /api/v2/novel/providerlist:
    get:
      deprecated: true
      description: 获取来源列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: get provider list
      tags:
      - Novel
  /api/v2/novel/search:
    get:
      deprecated: true
      description: 搜索小说
      parameters:
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 诡秘之主
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: search novel
      tags:
      - Novel
  /api/v2/novel/search/{provider}:
    get:
      deprecated: true
      description: 根据来源搜索小说
      parameters:
      - description: novel provider identifier
        in: path
        name: provider
        required: true
        type: string
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: use cache
        in: query
        name: cache
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: biqugeB?keyword=诡秘之主
          schema:
            $ref: '#/definitions/app.AppJsonResponse'
      summary: search novel
      tags:
      - Novel
swagger: "2.0"
