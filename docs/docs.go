// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/info": {
            "get": {
                "description": "获取当前用户信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "get current user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "get": {
                "description": "登录",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/anime/info": {
            "get": {
                "description": "根据metadata获取动漫信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "get anime info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "anime provider meta id",
                        "name": "mid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "xxxxxxx",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/anime/playurl": {
            "get": {
                "description": "获取动漫播放地址",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "get anime playurl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "anime provider meta id",
                        "name": "mid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "playlist id",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "episode id",
                        "name": "eid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "xxxxxxx",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/anime/providerlist": {
            "get": {
                "description": "获取来源列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "get provider list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/anime/search": {
            "get": {
                "description": "搜索动漫",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "search anime",
                "parameters": [
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "刀剑神域",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/anime/search/{provider}": {
            "get": {
                "description": "根据来源搜索动漫",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anime"
                ],
                "summary": "search anime",
                "parameters": [
                    {
                        "type": "string",
                        "description": "anime provider identifier",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "susudm?keyword=刀剑神域",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/novel/content": {
            "get": {
                "description": "获取小说章节内容",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Novel"
                ],
                "summary": "get novel content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "novel provider meta id",
                        "name": "mid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "volume id",
                        "name": "vid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "chapter id",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "https://www.linovelib.com/novel/2342/133318.html",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/novel/info": {
            "get": {
                "description": "获取小说简介",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Novel"
                ],
                "summary": "get novel info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "novel provider meta id",
                        "name": "mid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/novel/providerlist": {
            "get": {
                "description": "获取来源列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Novel"
                ],
                "summary": "get provider list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/novel/search": {
            "get": {
                "description": "搜索小说",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Novel"
                ],
                "summary": "search novel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "诡秘之主",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/novel/search/{provider}": {
            "get": {
                "description": "根据来源搜索小说",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Novel"
                ],
                "summary": "search novel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "novel provider identifier",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "use cache",
                        "name": "cache",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "biqugeB?keyword=诡秘之主",
                        "schema": {
                            "$ref": "#/definitions/app.AppJsonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.AppJsonResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
